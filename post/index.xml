<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 海岸突起山岚</title>
    <link>http://miantiao.ml/post/</link>
    <description>Recent content in Posts on 海岸突起山岚</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Mon, 23 May 2016 08:55:05 +0800</lastBuildDate>
    <atom:link href="http://miantiao.ml/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>杭州行</title>
      <link>http://miantiao.ml/post/hangzhou_/</link>
      <pubDate>Mon, 23 May 2016 08:55:05 +0800</pubDate>
      
      <guid>http://miantiao.ml/post/hangzhou_/</guid>
      <description>

&lt;h3 id=&#34;杭州之旅是极好的:e3766101cb62bc8726a113c20ad4be9e&#34;&gt;杭州之旅是极好的&lt;/h3&gt;

&lt;p&gt;在家里闷了n个月之后，被我爹跟我妈棍棒恐吓等之后，我终于被撵出家门。。。&lt;/p&gt;

&lt;p&gt;之前我是想先到上海的，可怜人家那里已经有小嫚住了，所以我转了个弯立刻马上就到达杭州了，大学里
的同学在这里的有4-5个，基本都见着了，都非常热情，对我表示嘘寒问暖，体现了无比的革命友谊，我
内心无比感动，在此表示感谢，尤其是会姐跟小菜。&lt;/p&gt;

&lt;p&gt;昨天周末，我拉着小菜跟队长去漫步了下西湖，走马观花的转了圈，行程3万多步，内心感到无比满足，
到了晚上脚疼的厉害，但其实是很开心的，因为大家见了面都说我胖。。胖。。&lt;/p&gt;

&lt;p&gt;上几张图片，后续再更新：&lt;/p&gt;


&lt;div class=&#34;pure-u-1-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://miantiao.ml/img/post/xihu_1.jpg&#34; alt=&#34;xihu_1&#34;&gt;
&lt;/div&gt;



&lt;div class=&#34;pure-u-1-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://miantiao.ml/img/post/xihu_2.jpg&#34; alt=&#34;xihu_2&#34;&gt;
&lt;/div&gt;



&lt;div class=&#34;pure-u-1-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://miantiao.ml/img/post/xihu_3.jpg&#34; alt=&#34;xihu_3&#34;&gt;
&lt;/div&gt;


&lt;p&gt;
&lt;div class=&#34;pure-u-1-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://miantiao.ml/img/post/xihu_4.jpg&#34; alt=&#34;xihu_4&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;div class=&#34;pure-u-1-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://miantiao.ml/img/post/xihu_5.jpg&#34; alt=&#34;xihu_5&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;div class=&#34;pure-u-1-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://miantiao.ml/img/post/xihu_6.jpg&#34; alt=&#34;xihu_6&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;div class=&#34;pure-u-1-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://miantiao.ml/img/post/xihu_7.jpg&#34; alt=&#34;xihu_7&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;div class=&#34;pure-u-1-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://miantiao.ml/img/post/xihu_8.jpg&#34; alt=&#34;xihu_8&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>一些有益的人或网站</title>
      <link>http://miantiao.ml/post/something_healthy/</link>
      <pubDate>Mon, 16 May 2016 16:43:11 +0800</pubDate>
      
      <guid>http://miantiao.ml/post/something_healthy/</guid>
      <description>

&lt;h3 id=&#34;网站:1dc31a69b43225495b9c31dd0d6fd282&#34;&gt;网站&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://codingnow.com&#34;&gt;云风&amp;rsquo;s blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://byvoid.com&#34;&gt;byvoid&amp;rsquo;s blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tianchunbinghe.blog.163.com/&#34;&gt;田春冰河&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;vczh&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;微信号:1dc31a69b43225495b9c31dd0d6fd282&#34;&gt;微信号&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;caoz 曹政&lt;/li&gt;
&lt;li&gt;fenny 冯大辉&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>对新vps必要的安全设置</title>
      <link>http://miantiao.ml/post/figure_your_vps_after_buy/</link>
      <pubDate>Sat, 14 May 2016 22:40:29 +0800</pubDate>
      
      <guid>http://miantiao.ml/post/figure_your_vps_after_buy/</guid>
      <description>

&lt;h3 id=&#34;以作备忘:2037959e2744d472acb921a705250b59&#34;&gt;以作备忘&lt;/h3&gt;

&lt;p&gt;最近vultr在做活动，新手冲钱送20$，我按捺不住的冲了5$，正好拿来跑测试网站。&lt;/p&gt;

&lt;p&gt;我一直喜欢用centos，所以这次选了的是最新的centos7_64版本，它有了大幅度的更新，比如防火墙从 iptables 换成了 firewalld，service 换成了 systemctl，还有别的很多地方都跟我以前熟悉的6有了比较大区别，所以我需要记录下来。&lt;/p&gt;

&lt;h3 id=&#34;安装epel源-并且更新系统:2037959e2744d472acb921a705250b59&#34;&gt;安装epel源，并且更新系统&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$yum -y install epel-release
$yum update
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;创建新用户并赋权-禁止root登陆-更换ssh端口号-并且在防火墙放行必要端口:2037959e2744d472acb921a705250b59&#34;&gt;创建新用户并赋权，禁止root登陆，更换ssh端口号，并且在防火墙放行必要端口&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#创建用户
$useradd jam -d /home/jam -m -s /bin/bash
$passwd jam

#赋予权限
$visudo
root    ALL=(ALL)       ALL
jam     ALL=(ROOT)NOPASSWD：   All

#编辑ssh配置
$ vi /etc/ssh/sshd_config
Port  12345  #修改端口
PermitRootLogin no   #禁止root登陆
AllowUsers jam

$systemctl restart sshd.service

#当然用密钥登陆，而禁止密码登陆最好
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编辑防火墙配置，放行 12345端口&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.命令方法
$firewall-cmd –permanent –add-port=12345/tcp
$systemctl restart firewalld.service

2.修改配置方法
$cp /usr/lib/firewalld/services/ssh.xml /etc/firewalld/services/
$vi /etc/firewalld/services/ssh.xml

$&amp;lt;port protocol=&amp;quot;tcp&amp;quot; port=&amp;quot;2345&amp;quot;/&amp;gt;

$systemctl start firewalld.service
$systemctl enable firewalld.service
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;开启selinux-可选:2037959e2744d472acb921a705250b59&#34;&gt;开启SELINUX（可选）&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$vi /etc/selinux/config
SELINUX=enforcing       #(enforcing为开启，disabled为关闭)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;增加swap分区:2037959e2744d472acb921a705250b59&#34;&gt;增加SWAP分区&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;#查看分区情况
$free -m

#增加 swap分区，容量为1GB
$dd if=/dev/zero of=/var/swap bs=1024 count=1024000

#设置交换文件
$mkswap /var/swap

#立即激活启用交换分区
$swapon /var/swap

#收回swap空间
$swapoff /var/swap
$rm /var/swap
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;配置hosts-deny文件预防暴力破解:2037959e2744d472acb921a705250b59&#34;&gt;配置hosts.deny文件预防暴力破解&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;vi /etc/hosts.deny

将东北大学的host黑名单下载复制进去[hosts.deny](http://antivirus.neu.edu.cn/ssh/lists/hosts.deny)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装fail2ban禁止ssh暴力破解:2037959e2744d472acb921a705250b59&#34;&gt;安装fail2ban禁止ssh暴力破解&lt;/h3&gt;

&lt;p&gt;需要安装支持 firewalld 的 fail2ban&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum -y install fail2ban-firewalld fail2ban-systemd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新建配置 jail.local&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[DEFAULT]
bantime = 86400  #一旦触犯，ban一整天，也就是这些秒
usedns = no      #这个必须关闭，否则影响 tail -f /var/log/fail2ban。。的输出
enabled = false   #总开关默认为false不能改，需要哪个服务单独写
banaction = firewallcmd-ipset  #禁止ip的方法
action = %(action_)s    #采取的措施为， 仅仅ban掉

[sshd]
enabled = true
port    = ssh
logpath = %(sshd_log)s
action = %(action_)s

[sshd-ddos]
enabled = true
port    = ssh
logpath = %(sshd_log)s
action = %(action_)s


$systemctl enable fail2ban
$systemctl restart fail2ban.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看fail2ban的运行状况
&lt;code&gt;$systemctl status fail2ban&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;查看实时禁止状况
&lt;code&gt;$tail -f /var/log/fail2ban.log&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;查看已经禁止ip列表
&lt;code&gt;ipset --list&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;参考文章:2037959e2744d472acb921a705250b59&#34;&gt;参考文章&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ifshow.com/centos-7-install-fail2ban-with-firewalld-to-defend-brute-force-password/&#34;&gt;ifshow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.freehao123.com/linux-vps-root/&#34;&gt;freehao123&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>centos7上nginx,gunicorn,supervisor部署flask网站</title>
      <link>http://miantiao.ml/post/deploy_flask/</link>
      <pubDate>Sat, 14 May 2016 22:40:20 +0800</pubDate>
      
      <guid>http://miantiao.ml/post/deploy_flask/</guid>
      <description>

&lt;p&gt;digital ocean 和 vultr 是两个处于5$价位很好的vps供应商，购买可以用我的链接哦
&lt;a href=&#34;http://www.vultr.com/?ref=6889905&#34;&gt;购买vultr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我们目标实现一个支持多个独立域名网站的线上Python环境，这会用到Virtualenv， Flask， Gunicorn， Supervisor， Nginx。&lt;/p&gt;

&lt;h3 id=&#34;配置用户环境:7d350297e80dca7d005a92d40faf9b07&#34;&gt;配置用户环境&lt;/h3&gt;

&lt;p&gt;一个vps可以跑多个站，最好将它们完全隔离，每个站对应一个用户。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;User        Site
bob         website     ##bob用户有一个dylan的站
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置好的目录树应该为这样&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. /home/bob/
   1. logs
       1. access.log
       2. error.log
       3. gunicorn_supervisor.logs
   2. website
      1. gunicorn.conf
      2. hello.py
      3. venv/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建用户并且赋予sudo权限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;useradd bob -d /home/bob -m -s /bin/bash
passwd bob

visudo 或 sudo vim /etc/sudoers
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;全局安装 pip, nginx, vritualenv, supervisor&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum -y install nginx, python-pip, supervisor
pip install virtualenv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装flask环境，同时在虚环境里安装gunicorn&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /home/bob
mkdir website/
cd website/

#安装虚幻境，安装flask，gunicorn
virtualenv venv
source venv/bin/activate

pip install flask
pip install gunicorn
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;deploy-flask并且设置好gunicorn:7d350297e80dca7d005a92d40faf9b07&#34;&gt;deploy flask并且设置好gunicorn&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;vi hello.py

##写入Flask的Hello World

from flask import Flask
app = Flask(__name__)
@app.route(&#39;/&#39;)
def hello_world():
    return &#39;Hello World!&#39;
    if __name__ == &#39;__main__&#39;:
        app.run()

cd /home/bob/website
#写入gunicorn配置
vi gunicorn.conf

workers = 4
bind = &#39;127.0.0.1:8001&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;配置supervisor:7d350297e80dca7d005a92d40faf9b07&#34;&gt;配置supervisor&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#配置文件在 /etc/supervisord.d/website.ini

[program:website]
command=/home/bob/website/venv/bin/gunicorn hello:app -c /home/bob/website/gunicorn.conf
directory=/home/bob/website
user=bob
autostart=true
autorestart=true

stdout_logfile=/home/bob/logs/gunicorn_supervisor.log

#启动supervisor
sudo supervisord -c /etc/supervisord.conf

#控制台
sudo supervisorctl
    status 查看当前运行的实例状态，running or failed
    restart start or stop
    reload 载入最新的配置文件，停止原有进程并按新的配置启动、管理所有进程
    update 根据最新的配置文件，启动新配置或有改动的进程，配置没有改动的进程不会受影响而重启

#注意：显示用stop停止掉的进程，用reload或者update都不会自动重启。
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;配置nginx:7d350297e80dca7d005a92d40faf9b07&#34;&gt;配置nginx&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$sudo vi /etc/nginx/conf.d/website.conf 

server{
        listen 80;
        server_name  xxx你的域名

        root /home/bob/website/;
        access_log /home/bob/logs/access.log;
        error_log /home/bob/logs/error.log;

        location / {
                proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_redirect off;

                if (!-f $request_filename) {
                        proxy_pass http://127.0.0.1:8001; //gunicorn的端口
                        break;
                }
        }
}

sudo systemctl start nginx

#当然，如果有静态文件，直接可以在nginx配置访问

#配置静态文件转发
location ~.*(js|css|png|gif|jpg|mp3|ogg)$ {
        root /home/bob/website/static/xxxx;
}

#配置静态页面转发
location ~.*(html)$ {
        root /home/bob/website/app/app_static_pages/;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你完成以上，并配置以下host文件，相信访问域名就可以看到一个运转良好的网站了。
当然，如果是部署到大集群上，可能会用到fabic。&lt;/p&gt;

&lt;p&gt;now, enjoy it.&lt;/p&gt;

&lt;h3 id=&#34;参考文章:7d350297e80dca7d005a92d40faf9b07&#34;&gt;参考文章&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://beiyuu.com/vps-config-python-vitrualenv-flask-gunicorn-supervisor-nginx/&#34;&gt;beiyuu&amp;rsquo;s blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://realpython.com/blog/python/kickstarting-flask-on-ubuntu-setup-and-deployment/&#34;&gt;realpython&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.simpleapples.com/2015/06/configure-nginx-supervisor-gunicorn-flask/&#34;&gt;simpleapples&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>计算机类书籍推荐</title>
      <link>http://miantiao.ml/post/books/</link>
      <pubDate>Sat, 14 May 2016 22:40:13 +0800</pubDate>
      
      <guid>http://miantiao.ml/post/books/</guid>
      <description>

&lt;h3 id=&#34;算法类:dbc19c2f13d02e3f5b18602966a5728f&#34;&gt;算法类&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;数据结构与算法分析-C语言版&lt;/li&gt;
&lt;li&gt;算法设计与分析（韩军）&lt;/li&gt;
&lt;li&gt;算法引论，一种创造性方法&lt;/li&gt;
&lt;li&gt;算法导论&lt;/li&gt;
&lt;li&gt;算法&lt;/li&gt;
&lt;li&gt;编程珠玑，更多的编程珠玑&lt;/li&gt;
&lt;li&gt;c interfaces and implementation&lt;/li&gt;
&lt;li&gt;algorithms on strings, trees and sequences&lt;/li&gt;
&lt;li&gt;the algorithm design maunal&lt;/li&gt;
&lt;li&gt;the since of programminging&lt;/li&gt;
&lt;li&gt;advanced data structures&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;c语言:dbc19c2f13d02e3f5b18602966a5728f&#34;&gt;C语言&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;k&amp;amp;r c&lt;/li&gt;
&lt;li&gt;c primer（plus）&lt;/li&gt;
&lt;li&gt;c专家编程&lt;/li&gt;
&lt;li&gt;c与指针&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;python:dbc19c2f13d02e3f5b18602966a5728f&#34;&gt;python&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;python编程实践&lt;/li&gt;
&lt;li&gt;python简明教程&lt;/li&gt;
&lt;li&gt;Learn Python the Hard Way&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.woodpecker.org.cn/moin/PyAbsolutelyZipManual&#34;&gt;python绝对简明教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;python核心编程&lt;/li&gt;
&lt;li&gt;flask web开发&lt;/li&gt;
&lt;li&gt;effective python&lt;/li&gt;
&lt;li&gt;利用python进行数据分析&lt;/li&gt;
&lt;li&gt;python web爬虫&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;golang:dbc19c2f13d02e3f5b18602966a5728f&#34;&gt;golang&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;effective go中文版&lt;/li&gt;
&lt;li&gt;the way to go&lt;/li&gt;
&lt;li&gt;go语言编程&lt;/li&gt;
&lt;li&gt;go web编程&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>以github-pages来写博客</title>
      <link>http://miantiao.ml/post/git-pages_and_wercker_blog/</link>
      <pubDate>Sat, 14 May 2016 20:35:23 +0800</pubDate>
      
      <guid>http://miantiao.ml/post/git-pages_and_wercker_blog/</guid>
      <description>

&lt;p&gt;本篇文章旨在引领人们享受写作的乐趣，而不是“工欲善其事，必先利其器”&lt;/p&gt;

&lt;h3 id=&#34;背景以及准备工作:4f72c81fb3d753ef84ce0db82cdd574e&#34;&gt;背景以及准备工作&lt;/h3&gt;

&lt;p&gt;相信每一个好的技术人员都有记录思想，工作经验，学习笔记等等多好习惯，而一个运行良好的blog不可或缺。所以这次我们以github pages来做一个blog。&lt;/p&gt;

&lt;p&gt;github是人们常用的版本控制工具，相信每个程序员都听说过。啥？你不知道，你一定是火星来的。:)-
hugo是一个前docker重量级员工跳出来搞的一个静态网页生成器，使用golang写的。
wercker是一个以docker为基础的持续性代码部署云服务。
好的，下面，我们开始吧:&lt;/p&gt;

&lt;h3 id=&#34;安装hugo:4f72c81fb3d753ef84ce0db82cdd574e&#34;&gt;安装hugo&lt;/h3&gt;

&lt;p&gt;由于我用的是centos_64位，所以在hugo的github上下载&lt;a href=&#34;https://github.com/spf13/hugo/releases/download/v0.15/hugo_0.15_linux_amd64.tar.gz&#34;&gt;hugo_0.15_linux_amd64.tar.gz&lt;/a&gt;这个软件包。
解压：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tar -xzvf hugo_0.15_linux_amd64.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;得到一个可执行的二进制go程序，改个短名字，如hugo，并把它放到/opt下，加入系统变量中
编辑 /etc/profile&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mv hugo /opt
$ vi /etc/profile
$ export HUGOROOT=/opt
$ export PATH=$PATH::$HUGOROOT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后就可以使用hugo来生成网站了,mysite是网站的路径&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site mysite
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后进入该路径&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd mysite
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在该目录下你可以看到以下几个目录和config.toml文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+ archetypes/ 
+ content/
+ layouts/
+ static/
  config.toml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;config.toml是网站的配置文件，包括baseurl, title, copyright等等网站参数。&lt;/p&gt;

&lt;p&gt;这几个文件夹的作用分别是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;archetypes：包括内容类型，在创建新内容时自动生成内容的配置&lt;/li&gt;
&lt;li&gt;content：包括网站内容，全部使用markdown格式&lt;/li&gt;
&lt;li&gt;layouts：包括了网站的模版，决定内容如何呈现&lt;/li&gt;
&lt;li&gt;static：包括了css, js, fonts, media等，决定网站的外观&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hugo提供了一些完整的主题可以使用，下载这些主题：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone --recursive https://github.com/spf13/hugoThemes themes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此时现成的主题存放在themes/文件夹中。&lt;/p&gt;

&lt;p&gt;现在我们先熟悉一下Hugo，创建新页面：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new about.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进入content/文件夹可以看到，此时多了一个markdown格式的文件about.md，打开文件可以看到时间和文件名等信息已经自动加到文件开头，包括创建时间，页面名，是否为草稿等。&lt;/p&gt;

&lt;p&gt;我在页面中加入了一些内容，然后运行Hugo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server -t hyde --buildDrafts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;-t参数的意思是使用hyde主题渲染我们的页面，注意到about.md目前是作为草稿，即draft参数设置为true，运行Hugo时要加上&amp;ndash;buildDrafts参数才会生成被标记为草稿的页面。
在浏览器输入localhost:1313，就可以看到我们刚刚创建的页面。&lt;/p&gt;


&lt;div class=&#34;pure-u-1-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://miantiao.ml/img/post/hugo-server-1.png&#34; alt=&#34;name?&#34;&gt;
&lt;/div&gt;


&lt;p&gt;注意观察当前目录下多了一个文件夹public/，这里面是Hugo生成的整个静态网站，如果使用Github pages来作为博客的Host，你只需要将public/里的文件上传就可以，这相当于是Hugo的输出。&lt;/p&gt;

&lt;h3 id=&#34;主题选择:4f72c81fb3d753ef84ce0db82cdd574e&#34;&gt;主题选择&lt;/h3&gt;

&lt;p&gt;进入themes/hyde文件夹，可以看到熟悉的文件夹名，和主题相关的文件主要是layouts/和static/这两个文件内，选择好一个主题后，可以将themes/中的文件夹直接复制到mysite/目录下，覆盖原来的layouts/, static/文件夹，此时直接使用\$Hugo server就可以看到主题效果，修改主题也可以直接修改其中的css, js, html等文件。&lt;/p&gt;

&lt;p&gt;我的博客模版是在Hugo作者spf13的&lt;a href=&#34;http://spf13.com&#34;&gt;博客&lt;/a&gt;基础上修改的。第一步，先去他的博客网站源码&lt;a href=&#34;https://github.com/spf13/spf13.com&#34;&gt;主页&lt;/a&gt;把整个项目clone下来&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:spf13/spf13.com.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;把项目中的static/和layouts/文件复制到自己网站的目录下替换原来的文件夹。再次运行Hugo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server --buildDrafts -w
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这次没有选择主题，如果选择了主题会将当前的主题覆盖掉。参数-w意味监视watch，此时如果修改了网站内的信息，会直接显示在浏览器的页面上，不需要重新运行\$hugo server，方便我们进行修改。这是采用了spf13主题的页面：&lt;/p&gt;


&lt;div class=&#34;pure-u-1-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://miantiao.ml/img/post/hugo-server-2.png&#34; alt=&#34;name?&#34;&gt;
&lt;/div&gt;


&lt;p&gt;我们尝试在他的主题基础上修改，找到/layouts/partials/subheader.html文件:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;header id=&amp;quot;header&amp;quot;&amp;gt;
    &amp;lt;figure&amp;gt;
      &amp;lt;a href=&amp;quot;/&amp;quot; border=0 id=&amp;quot;logolink&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;icon-spf13-3&amp;quot; id=&amp;quot;logo&amp;quot;&amp;gt; &amp;lt;/div&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;/figure&amp;gt;
    &amp;lt;div id=&amp;quot;byline&amp;quot;&amp;gt;by Steve Francia&amp;lt;/div&amp;gt;
    &amp;lt;nav id=&amp;quot;nav&amp;quot;&amp;gt;
    {{ partial &amp;quot;nav.html&amp;quot; . }}
    {{ partial &amp;quot;social.html&amp;quot; . }}
    &amp;lt;/nav&amp;gt;
&amp;lt;/header&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将by Steve Francia换成by myname，再次回到浏览器，可以看到左边侧栏已经发生变化了，你可以根据自己的需要修改对应的文件，当然得懂一点css, html。&lt;/p&gt;


&lt;div class=&#34;pure-u-1-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://miantiao.ml/img/post/hugo-server-change.png&#34; alt=&#34;name?&#34;&gt;
&lt;/div&gt;


&lt;h3 id=&#34;评论功能:4f72c81fb3d753ef84ce0db82cdd574e&#34;&gt;评论功能&lt;/h3&gt;

&lt;p&gt;个人博客当然不能没有评论，Hugo默认支持&lt;a href=&#34;https://disqus.com/&#34;&gt;Disqus&lt;/a&gt;的评论，需要在模版中添加以下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ template &amp;quot;_internal/disqus.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;spf13在/layouts/partials/disqus.html中已经添加好了。&lt;/p&gt;

&lt;p&gt;只需要去Disqus注册一个账号，然后在config.toml里加上：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;disqusShortname = &amp;quot;yourdisqusShortname&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意-w参数是不能监测config.toml里参数变化的，因此需要重新运行Hugo，进入localhost:1313/about，可以看到评论功能。&lt;/p&gt;


&lt;div class=&#34;pure-u-1-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://miantiao.ml/img/post/comments.png&#34; alt=&#34;name?&#34;&gt;
&lt;/div&gt;


&lt;h3 id=&#34;代码高亮:4f72c81fb3d753ef84ce0db82cdd574e&#34;&gt;代码高亮&lt;/h3&gt;

&lt;p&gt;作为码农，代码高亮对于写博客来说当然必不可少。有两种方法：第一种是在生成页面时就生成好代码高亮过的页面；第二种是使用js，用户加载页面时浏览器再进行渲染。&lt;/p&gt;

&lt;p&gt;第一种方法需要使用&lt;a href=&#34;http://pygments.org/&#34;&gt;Pygments&lt;/a&gt;，一个python写的工具。&lt;/p&gt;

&lt;p&gt;安装Pygments：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ pip install Pygments
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;没有pip的先下载 &lt;a href=&#34;https://bootstrap.pypa.io/get-pip.py&#34;&gt;https://bootstrap.pypa.io/get-pip.py&lt;/a&gt; ，然后安装pip：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ python get-pip.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pygments的调用采用shortcodes实现，spf13里也写好了，在/layouts/shortcode/highlight.html里&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ $lang := index .Params 0 }}
{{ highlight .Inner $lang }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;要使代码高亮，在你的代码外面加上：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ % highlight python %}}
your code here.
{{ % /highlight %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里为了避免以上两行被识别为代码高亮的标识，在 {{ 和 % 之间多加了一个空格，实际使用的时候需要把空格去掉。&lt;/p&gt;

&lt;p&gt;第二种方法比较简单，在layouts/partials/header_includes.html中加上：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;https://yandex.st/highlightjs/8.0/highlight.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://yandex.st/highlightjs/8.0/styles/default.min.css&amp;quot;&amp;gt;
&amp;lt;script&amp;gt;hljs.initHighlightingOnLoad();&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里使用了&lt;a href=&#34;http://yandex.ru/&#34;&gt;Yandex&lt;/a&gt;的&lt;a href=&#34;http://highlightjs.org/&#34;&gt;Highlight.js&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;其他的可以实现代码高亮的js库还有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://highlightjs.org/&#34;&gt;Highlight.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://craig.is/making/rainbows&#34;&gt;Rainbow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://alexgorbatchev.com/SyntaxHighlighter/&#34;&gt;Syntax Highlighter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.google.com/p/google-code-prettify/&#34;&gt;Google Prettify&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;插入图片:4f72c81fb3d753ef84ce0db82cdd574e&#34;&gt;插入图片&lt;/h3&gt;

&lt;p&gt;图片文件放在static/media文件中，插入图片：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ % img src=&amp;quot;/media/example.jpg&amp;quot; alt=&amp;quot;example&amp;quot; %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意这里的 {{ 和 % 之间也加上了空格，避免这行代码起作用，实际使用也需要把空格去掉。&lt;/p&gt;

&lt;h3 id=&#34;使用mathjax:4f72c81fb3d753ef84ce0db82cdd574e&#34;&gt;使用Mathjax&lt;/h3&gt;

&lt;p&gt;在需要渲染公式的页面加入以下代码，比如 layouts/_default/single.html 文件，这个文件是对于所有post进行页面生成的模版，如果你希望所有页面都对公式渲染的话，可以加入&lt;code&gt;layouts/partials/footer.html&lt;/code&gt;文件里，保证所有生成的页面都有这几行代码。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;
  src=&amp;quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&amp;gt;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mathjax和Markdown会有冲突问题，&lt;a href=&#34;http://doswa.com/2011/07/20/mathjax-in-markdown.html&#34;&gt;这里&lt;/a&gt;提供了解决方案。&lt;/p&gt;

&lt;h3 id=&#34;用github-pages作为网站的host:4f72c81fb3d753ef84ce0db82cdd574e&#34;&gt;用github pages作为网站的Host&lt;/h3&gt;

&lt;p&gt;Github pages分为两种：一种是项目主页，每个项目都可以有一个；另一种是用户主页，一个用户只能有一个。&lt;/p&gt;

&lt;p&gt;因为用户主页只能有一个，所以建议使用项目主页托管，不过我这里采用了用户主页，反正我也只用一个博客，使用个人主页作为Host也相对更简单一点。&lt;/p&gt;

&lt;p&gt;我们需要创建两个单独的repo，一个用于放Hugo的输入文件，即除了 public/ 文件夹之外的所有文件，另一个放我们生成的静态网站，也就是 public/ 的内容。&lt;/p&gt;

&lt;p&gt;步骤如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;在Github上创建repo  &lt;your-project&gt;-hugo ，托管Hugo的输入文件。&lt;/li&gt;
&lt;li&gt;创建repo  &lt;username&gt;.github.io ，用于托管 public/ 文件夹，注意这里的repo名字一定要用自己的用户名，才会被当作是个人主页。&lt;/li&gt;
&lt;li&gt;clone your-project
&lt;code&gt;
$ git clone &amp;lt;&amp;lt;your-project&amp;gt;-hugo-url&amp;gt;
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;进入your-project 目录&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;$ cd &amp;lt;your-project&amp;gt;-hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;删掉public目录（这个目录每次运行Hugo都会再次生成，不用担心）
&lt;code&gt;
$ rm -rf public
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;把public/目录添加为submodule 与&lt;username&gt;.github.io同步
&lt;code&gt;
$ git submodule add git@github.com:&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.git public
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加.gitignore文件，文件中写 public/ ，在同步 &lt;your-project&gt;-hugo 时会忽略public文件夹&lt;/li&gt;
&lt;li&gt;下面是写好的一个script  deploy.sh ，拷贝过去直接就能用，记得chmod +x deploy.sh加上运行权限。&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash
echo -e &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m&amp;quot;

msg=&amp;quot;rebuilding site `date`&amp;quot;
if [ $# -eq 1 ]
  then msg=&amp;quot;$1&amp;quot;
fi

# Push Hugo content 
git add -A
git commit -m &amp;quot;$msg&amp;quot;
git push origin master


# Build the project. 
hugo # if using a theme, replace by `hugo -t &amp;lt;yourtheme&amp;gt;`

# Go To Public folder
cd public
# Add changes to git.
git add -A

# Commit changes.

git commit -m &amp;quot;$msg&amp;quot;

# Push source and build repos.
git push origin master

# Come Back
cd ..

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;等一小会儿（10分钟左右），你就能在&lt;a href=&#34;http://username.github.io/&#34;&gt;http://username.github.io/&lt;/a&gt; 这个页面看到你的网站了！每次更新网站或者写了新文章，只需要运行./deploy.sh 发布就搞定了，简单吧？&lt;/p&gt;

&lt;p&gt;Github pages还支持域名绑定，三个步骤：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;在 &lt;username&gt;.github.io repo的跟目录下添加 CNAME 文件，文件里写上你的域名，不用加http://的开头。&lt;/li&gt;
&lt;li&gt;记下&lt;a href=&#34;http://username.github.io/&#34;&gt;http://username.github.io/&lt;/a&gt; 的ip地址。
&lt;code&gt;
$ ping username.github.io
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在你的域名管理中加上两条A记录，分别是www和@，记录指向&lt;a href=&#34;http://username.github.io/&#34;&gt;http://username.github.io/&lt;/a&gt; 的ip地址，也需要等一小会儿生效。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;更改字体服务商:4f72c81fb3d753ef84ce0db82cdd574e&#34;&gt;更改字体服务商&lt;/h3&gt;

&lt;p&gt;我的博客模版里用的字体是从googleapis里获取的，国内访问会下载失败，把字体库改成360的。
找到 layouts/partials/head_includes.html 文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link href=&#39;http://fonts.googleapis.com/css?family=Fjalla+One|Open+Sans:300&#39; rel=&#39;stylesheet&#39; type=&#39;text/css&#39;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将其中的googleapis替换为useso就行了。&lt;/p&gt;

&lt;p&gt;至于怎么自动化更新，请大家自行查阅 wercker网站，=_=&lt;/p&gt;

&lt;h4 id=&#34;参考文章:4f72c81fb3d753ef84ce0db82cdd574e&#34;&gt;参考文章：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://nanshu.wang&#34;&gt;nanshu&amp;rsquo;blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.coderzh.com/&#34;&gt;coderzh blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jianshu.com/p/b66754c0baa6&#34;&gt;jianshu&amp;rsquo; share&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gohugo.io&#34;&gt;gohugo&lt;/a&gt; 和 &lt;a href=&#34;http://wercker.com&#34;&gt;wecker&lt;/a&gt;的官方blog&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Markdown语法</title>
      <link>http://miantiao.ml/post/test-markdown/</link>
      <pubDate>Sat, 14 May 2016 15:36:17 +0800</pubDate>
      
      <guid>http://miantiao.ml/post/test-markdown/</guid>
      <description>

&lt;h1 id=&#34;markdown-语法说明:f9d6f87bbe042987a4e7a0f97beb3269&#34;&gt;Markdown 语法说明&lt;/h1&gt;

&lt;p&gt;There is a good tech article.&lt;a href=&#34;https://www.texide.com/help/markdown_syntax&#34;&gt;watch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;###加粗字体示例&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;加粗&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;列表示例 +++&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;red&lt;/strong&gt;: 这是红色&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;blue&lt;/strong&gt;: 这是蓝色&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;green&lt;/strong&gt;: 这是绿色&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;链接示例&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://miantiao.ml&#34;&gt;你好，中国&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;分割线示例&amp;mdash;&amp;ndash;&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;嵌套示例&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;这是第一段&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;这是第二段&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这是第三段&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;代码块用 3个&lt;/code&gt;`&lt;code&gt;包围，上下都有&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;for i in range(4):
    print i
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;表格示例&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;name&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;value&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;qty&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;computer&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1000 usd&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;phone&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12 usd&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code&gt;图片示例&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&lt;div class=&#34;pure-u-1-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://miantiao.ml/img/post/1111.jpg&#34; alt=&#34;name?&#34;&gt;
&lt;/div&gt;

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>